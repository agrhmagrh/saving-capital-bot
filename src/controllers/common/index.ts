import { Controller } from "../../controller";
import { MyBot, MyContext } from "../../declarations";
import { Markup } from "telegraf";
import { commands } from "./commands";
import { userStorage } from "../../services";
import { escapeMarkdownV2, formatNumber, formatPercent, formatNumberList } from "../../utils/markdown";

export default function (bot: MyBot) {
  const common = new Controller<MyContext>();
  
  const markup = Markup.inlineKeyboard([
    [Markup.button.callback("üöÄ –ù–∞—á–∞—Ç—å –∫–æ–ø–∏—Ç—å!", "start")],
    [Markup.button.callback("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "stats")],
  ]);

  // –ö–æ–º–∞–Ω–¥–∞ /start
  common.start(async (ctx, next) => {
    const userId = ctx.from?.id;
    if (!userId) return next();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userStorage.initUser(userId);
    
    await ctx.reply(
      "üí∞ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ –≥–æ–¥*\n\n" +
      "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤—ã–±–∏—Ä–∞–π—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 365 –∏ –ø–æ–ø–æ–ª–Ω—è–π—Ç–µ –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å—á–µ—Ç –Ω–∞ —ç—Ç—É —Å—É–º–º—É\\.\n\n" +
      "üéØ *–ü—Ä–∞–≤–∏–ª–∞:*\n" +
      "‚Ä¢ –ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑\n" +
      "‚Ä¢ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏\n" +
      "‚Ä¢ –ë–æ—Ç –∑–∞–ø–æ–º–Ω–∏—Ç –≤—Å–µ –≤–∞—à–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\n" +
      "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞ –≥–æ–¥: *66 795 —Ä—É–±–ª–µ–π*",
      { 
        parse_mode: 'MarkdownV2',
        ...markup 
      }
    );
    return next();
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—á–∏—Å–µ–ª)
  common.on("text", async (ctx, next) => {
    const { text } = ctx.message;
    const userId = ctx.from?.id;
    
    if (!userId) return next();

    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    if (text.startsWith("/")) return next();

    const number = parseInt(text);
    
    if (!number || number < 1 || number > 365) {
      await ctx.reply(
        "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 365"
      );
      return next();
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–ø–æ–ª–Ω—è–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å–µ–≥–æ–¥–Ω—è
    if (userStorage.hasTopUpToday(userId)) {
      await ctx.reply(
        "‚è∞ *–í—ã —É–∂–µ –ø–æ–ø–æ–ª–Ω—è–ª–∏ —Å—á–µ—Ç —Å–µ–≥–æ–¥–Ω—è\\!*\n\n" +
        "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏\\. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞\\!\n\n" +
        "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stats —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å",
        { parse_mode: 'MarkdownV2' }
      );
      return next();
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å –ª–∏ —á–∏—Å–ª–æ
    if (userStorage.isNumberUsed(userId, number)) {
      try {
        const stats = userStorage.getUserStats(userId);
        const remainingCount = stats?.remainingNumbers.length || 0;
        
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö —á–∏—Å–µ–ª
        let suggestedNumbers = '';
        if (stats && stats.remainingNumbers.length > 0) {
          const firstFive = stats.remainingNumbers.slice(0, 5);
          suggestedNumbers = formatNumberList(firstFive);
          if (remainingCount > 5) {
            suggestedNumbers += escapeMarkdownV2('...')
          }
        }
        
        await ctx.reply(
          `‚ö†Ô∏è *–ß–∏—Å–ª–æ ${formatNumber(number)} —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å\\!*\n\n` +
          `–í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ\\. –î–æ—Å—Ç—É–ø–Ω–æ –µ—â–µ: *${formatNumber(remainingCount)}* —á–∏—Å–µ–ª\n\n` +
          `üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: ${suggestedNumbers}`,
          { parse_mode: 'MarkdownV2' }
        );
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —á–∏—Å–ª–∞:', error);
        await ctx.reply(
          `‚ö†Ô∏è –ß–∏—Å–ª–æ ${number} —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 365.`
        );
      }
      return next();
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∏—Å–ª–æ –≤ —Å–µ—Å—Å–∏–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    ctx.session = {
      begin: 1,
      end: 365,
      topUpAmount: number
    };

    await ctx.reply(
      `üíµ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç –Ω–∞ *${number} —Ä—É–±–ª–µ–π*?`,
      {
        parse_mode: 'MarkdownV2',
        ...Markup.inlineKeyboard([
          [Markup.button.callback("‚úÖ –î–∞, –ø–æ–ø–æ–ª–Ω–∏–ª!", "confirm_topup")],
          [Markup.button.callback("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", "cancel_topup")],
        ])
      }
    );
    
    return next();
  });

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const timeButtons = [9, 12, 15, 18, 21].map((time) =>
    Markup.button.callback(`${time}:00`, `time_${time}`)
  );
  const markupTime = Markup.inlineKeyboard([
    timeButtons.slice(0, 3),
    timeButtons.slice(3)
  ]);

  common.command("time", async (ctx, next) => {
    await ctx.reply("üïê –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:", markupTime);
    return next();
  });

  // –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  common.command("stats", async (ctx, next) => {
    try {
      const userId = ctx.from?.id;
      if (!userId) return next();

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      userStorage.initUser(userId);
      
      const stats = userStorage.getUserStats(userId);
      if (!stats) {
        await ctx.reply("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∫–æ–ø–∏—Ç—å —Å –ø–æ–º–æ—â—å—é /start");
        return next();
      }

      const progress = ((stats.usedCount / 365) * 100).toFixed(1);
      const avgDaily = stats.daysFromStart > 0 ? (stats.totalAmount / stats.daysFromStart).toFixed(0) : 0;

      await ctx.reply(
        `üìä *–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π*\n\n` +
        `üí∞ –ù–∞–∫–æ–ø–ª–µ–Ω–æ: *${formatNumber(stats.totalAmount)}* —Ä—É–±–ª–µ–π\n` +
        `üìà –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —á–∏—Å–µ–ª: *${formatNumber(stats.usedCount)}*/365 \\(${formatPercent(progress)}%\\)\n` +
        `üìÖ –î–Ω–µ–π —Å –Ω–∞—á–∞–ª–∞: *${formatNumber(stats.daysFromStart)}*\n` +
        `üìä –°—Ä–µ–¥–Ω–µ–µ –≤ –¥–µ–Ω—å: *${formatNumber(Number(avgDaily))}* —Ä—É–±–ª–µ–π\n\n` +
        `üéØ –î–æ —Ü–µ–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å: *${formatNumber(66795 - stats.totalAmount)}* —Ä—É–±–ª–µ–π`,
        { parse_mode: 'MarkdownV2' }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ stats:', error);
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
    return next();
  });

  // –î–µ–π—Å—Ç–≤–∏–µ "–ù–∞—á–∞—Ç—å –∫–æ–ø–∏—Ç—å"
  common.action("start", async (ctx, next) => {
    const userId = ctx.from?.id;
    if (!userId) return next();

    userStorage.initUser(userId);
    
    ctx.session = {
      begin: 1,
      end: 365,
    };

    await ctx.editMessageText(
      `üéØ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∑–∞–ø—É—â–µ–Ω–∞\\!*\n\n` +
      `–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞ –≥–æ–¥: *66 795* —Ä—É–±–ª–µ–π\n\n` +
      `üí° –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 365 –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞`,
      { parse_mode: 'MarkdownV2' }
    );
    
    await ctx.answerCbQuery("–°—Ç—Ä–∞—Ç–µ–≥–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞! üöÄ");
    return next();
  });

  // –î–µ–π—Å—Ç–≤–∏–µ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
  common.action("stats", async (ctx, next) => {
    try {
      const userId = ctx.from?.id;
      if (!userId) {
        await ctx.answerCbQuery("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", { show_alert: true });
        return next();
      }

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      userStorage.initUser(userId);
      
      const stats = userStorage.getUserStats(userId);
      if (!stats) {
        await ctx.answerCbQuery("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∫–æ–ø–∏—Ç—å!", { show_alert: true });
        return next();
      }

      const progress = ((stats.usedCount / 365) * 100).toFixed(1);
      
      await ctx.editMessageText(
        `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–π*\n\n` +
        `üí∞ –ù–∞–∫–æ–ø–ª–µ–Ω–æ: *${formatNumber(stats.totalAmount)}* —Ä—É–±\n` +
        `üìà –ü—Ä–æ–≥—Ä–µ—Å—Å: *${formatNumber(stats.usedCount)}*/365 \\(${formatPercent(progress)}%\\)\n` +
        `üìÖ –î–Ω–µ–π —Å –Ω–∞—á–∞–ª–∞: *${formatNumber(stats.daysFromStart)}*\n\n` +
        `üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é`,
        { 
          parse_mode: 'MarkdownV2',
          ...Markup.inlineKeyboard([
            [Markup.button.callback("üîô –ù–∞–∑–∞–¥", "back_to_main")]
          ])
        }
      );
      
      await ctx.answerCbQuery();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ action stats:', error);
      await ctx.answerCbQuery("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏", { show_alert: true });
    }
    return next();
  });

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
  common.action("confirm_topup", async (ctx, next) => {
    try {
      const userId = ctx.from?.id;
      const amount = ctx.session?.topUpAmount;
      
      if (!userId || !amount) {
        await ctx.answerCbQuery("–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", { show_alert: true });
        return next();
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞
      const hasTopUpToday = userStorage.hasTopUpToday(userId);
      const isNumberUsed = userStorage.isNumberUsed(userId, amount);
      
      if (hasTopUpToday) {
        await ctx.editMessageText(
          "‚è∞ *–í—ã —É–∂–µ –ø–æ–ø–æ–ª–Ω—è–ª–∏ —Å—á–µ—Ç —Å–µ–≥–æ–¥–Ω—è\\!*\n\n" +
          "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏\\. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞\\!\n\n" +
          "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stats —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å",
          { parse_mode: 'MarkdownV2' }
        );
        await ctx.answerCbQuery("–£–∂–µ –ø–æ–ø–æ–ª–Ω—è–ª–∏ —Å–µ–≥–æ–¥–Ω—è!", { show_alert: true });
      } else if (isNumberUsed) {
        await ctx.editMessageText(
          `‚ùå –û—à–∏–±–∫–∞: —á–∏—Å–ª–æ ${formatNumber(amount)} —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å\\!`,
          { parse_mode: 'MarkdownV2' }
        );
        await ctx.answerCbQuery("–ß–∏—Å–ª–æ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–æ—Å—å!", { show_alert: true });
      } else {
        const success = userStorage.addUsedNumber(userId, amount);
        
        if (success) {
          const stats = userStorage.getUserStats(userId);
          await ctx.editMessageText(
            `‚úÖ *–û—Ç–ª–∏—á–Ω–æ\\!* –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ *${formatNumber(amount)}* —Ä—É–±–ª–µ–π –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ\n\n` +
            `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: *${formatNumber(stats?.totalAmount || 0)}* —Ä—É–±–ª–µ–π\n` +
            `üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —á–∏—Å–µ–ª: *${formatNumber(stats?.usedCount || 0)}*/365\n\n` +
            `–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∫–æ–ø–∏—Ç—å\\! üí™`,
            { parse_mode: 'MarkdownV2' }
          );
          await ctx.answerCbQuery("–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ! üí∞");
        } else {
          await ctx.editMessageText(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\\. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑\\.",
            { parse_mode: 'MarkdownV2' }
          );
          await ctx.answerCbQuery("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è!", { show_alert: true });
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ confirm_topup:', error);
      await ctx.answerCbQuery("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏", { show_alert: true });
    }
    
    return next();
  });

  // –û—Ç–º–µ–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
  common.action("cancel_topup", async (ctx, next) => {
    await ctx.editMessageText(
      "‚ùå –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ\\. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 365",
      { parse_mode: 'MarkdownV2' }
    );
    await ctx.answerCbQuery();
    return next();
  });

  // –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
  common.action("back_to_main", async (ctx, next) => {
    await ctx.editMessageText(
      "üí∞ *–°—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–ª–∞ –Ω–∞ –≥–æ–¥*\n\n" +
      "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤—ã–±–∏—Ä–∞–π—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 365 –∏ –ø–æ–ø–æ–ª–Ω—è–π—Ç–µ –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å—á–µ—Ç –Ω–∞ —ç—Ç—É —Å—É–º–º—É\\.\n\n" +
      "üéØ *–ü—Ä–∞–≤–∏–ª–∞:*\n" +
      "‚Ä¢ –ö–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑\n" +
      "‚Ä¢ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏\n" +
      "‚Ä¢ –ë–æ—Ç –∑–∞–ø–æ–º–Ω–∏—Ç –≤—Å–µ –≤–∞—à–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\n" +
      "‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞ –≥–æ–¥: *66 795 —Ä—É–±–ª–µ–π*",
      { 
        parse_mode: 'MarkdownV2',
        ...markup 
      }
    );
    await ctx.answerCbQuery();
    return next();
  });

  // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  [9, 12, 15, 18, 21].forEach(hour => {
    common.action(`time_${hour}`, async (ctx, next) => {
      const userId = ctx.from?.id;
      if (!userId) return next();

      userStorage.setNotificationTime(userId, hour);
      
      await ctx.editMessageText(
        `‚úÖ –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ *${hour}:00*\n\n` +
        `–¢–µ–ø–µ—Ä—å –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ —ç—Ç–æ –≤—Ä–µ–º—è —è –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å—á–µ—Ç–∞\\!`,
        { parse_mode: 'MarkdownV2' }
      );
      
      await ctx.answerCbQuery(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ ${hour}:00 –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã! üîî`);
      return next();
    });
  });

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∏—Å–µ–ª
  common.command("available", async (ctx, next) => {
    try {
      const userId = ctx.from?.id;
      if (!userId) return next();

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      userStorage.initUser(userId);
      
      const stats = userStorage.getUserStats(userId);
      if (!stats) {
        await ctx.reply("–°–Ω–∞—á–∞–ª–∞ –Ω–∞—á–Ω–∏—Ç–µ –∫–æ–ø–∏—Ç—å —Å –ø–æ–º–æ—â—å—é /start");
        return next();
      }

      const availableNumbers = stats.remainingNumbers;
      const totalAvailable = availableNumbers.length;
      
      if (totalAvailable === 0) {
        await ctx.reply(
          "üéâ *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º\\!* –í—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 365\\!\n\n" +
          `üí∞ –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞: *${formatNumber(stats.totalAmount)}* —Ä—É–±–ª–µ–π`,
          { parse_mode: 'MarkdownV2' }
        );
        return next();
      }

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 20 –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∏—Å–µ–ª
      const displayNumbers = availableNumbers.slice(0, 20);
      const moreCount = totalAvailable - displayNumbers.length;
      
      await ctx.reply(
        `üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ —á–∏—Å–ª–∞* \\(${formatNumber(totalAvailable)} –∏–∑ 365\\):\n\n` +
        `${formatNumberList(displayNumbers)}${moreCount > 0 ? `\n\n${escapeMarkdownV2('...')} –∏ –µ—â–µ ${formatNumber(moreCount)} —á–∏—Å–µ–ª` : ''}\n\n` +
        `üí° –í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–µ –∏–∑ —ç—Ç–∏—Ö —á–∏—Å–µ–ª –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Å—á–µ—Ç–∞`,
        { parse_mode: 'MarkdownV2' }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ available:', error);
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∏—Å–µ–ª. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
    
    return next();
  });

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
  common.command("reset", async (ctx, next) => {
    const userId = ctx.from?.id;
    if (!userId) return next();

    await ctx.reply(
      "‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ\\!* –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ?\n\n" +
      "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å\\!",
      {
        parse_mode: 'MarkdownV2',
        ...Markup.inlineKeyboard([
          [Markup.button.callback("‚úÖ –î–∞, —Å–±—Ä–æ—Å–∏—Ç—å", "confirm_reset")],
          [Markup.button.callback("‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", "cancel_reset")],
        ])
      }
    );
    
    return next();
  });

  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞
  common.action("confirm_reset", async (ctx, next) => {
    const userId = ctx.from?.id;
    if (!userId) return next();

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    userStorage.resetUser(userId);
    
    await ctx.editMessageText(
      "‚úÖ *–î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã\\!*\n\n" +
      "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∫–æ–ø–∏—Ç—å –∑–∞–Ω–æ–≤–æ\\. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start",
      { parse_mode: 'MarkdownV2' }
    );
    
    await ctx.answerCbQuery("–î–∞–Ω–Ω—ã–µ —Å–±—Ä–æ—à–µ–Ω—ã!");
    return next();
  });

  // –û—Ç–º–µ–Ω–∞ —Å–±—Ä–æ—Å–∞
  common.action("cancel_reset", async (ctx, next) => {
    await ctx.editMessageText(
      "‚ùå –°–±—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω\\. –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã\\.",
      { parse_mode: 'MarkdownV2' }
    );
    await ctx.answerCbQuery();
    return next();
  });

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è
  common.command("today", async (ctx, next) => {
    try {
      const userId = ctx.from?.id;
      if (!userId) return next();

      userStorage.initUser(userId);
      
      const hasTopUpToday = userStorage.hasTopUpToday(userId);
      const stats = userStorage.getUserStats(userId);
      
      if (hasTopUpToday) {
        await ctx.reply(
          "‚úÖ *–°–µ–≥–æ–¥–Ω—è –≤—ã —É–∂–µ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ —Å—á–µ—Ç\\!*\n\n" +
          `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: *${formatNumber(stats?.totalAmount || 0)}* —Ä—É–±–ª–µ–π\n` +
          `üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —á–∏—Å–µ–ª: *${formatNumber(stats?.usedCount || 0)}*/365\n\n` +
          "–°–ª–µ–¥—É—é—â–µ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –∑–∞–≤—Ç—Ä–∞\\!",
          { parse_mode: 'MarkdownV2' }
        );
      } else {
        await ctx.reply(
          "‚è∞ *–°–µ–≥–æ–¥–Ω—è –≤—ã –µ—â–µ –Ω–µ –ø–æ–ø–æ–ª–Ω—è–ª–∏ —Å—á–µ—Ç*\n\n" +
          "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 365 –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\\!\n\n" +
          "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /available —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —á–∏—Å–ª–∞",
          { parse_mode: 'MarkdownV2' }
        );
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ today:', error);
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
    
    return next();
  });

  common.help((ctx) => ctx.reply(commands.text));

  // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  common.command("settings", async (ctx, next) => {
    try {
      const userId = ctx.from?.id;
      if (!userId) return next();

      userStorage.initUser(userId);
      const user = userStorage.getUser(userId);
      
      const hasNotifications = user?.notificationTime !== undefined;
      const hasCongratulations = user?.enableCongratulations === true;
      
      await ctx.reply(
        "‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*\n\n" +
        `üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: ${hasNotifications ? `–≤–∫–ª—é—á–µ–Ω—ã –≤ ${user?.notificationTime}:00` : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}\n` +
        `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è: ${hasCongratulations ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}\n\n` +
        "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:",
        {
          parse_mode: 'MarkdownV2',
          ...Markup.inlineKeyboard([
            [Markup.button.callback("üîî –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π", "set_time")],
            [Markup.button.callback(hasCongratulations ? "üéâ –û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è" : "üéâ –í–∫–ª—é—á–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è", "toggle_congratulations")],
            [Markup.button.callback("üîô –ù–∞–∑–∞–¥", "back_to_main")]
          ])
        }
      );
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ settings:', error);
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.");
    }
    
    return next();
  });

  // –î–µ–π—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π
  common.action("toggle_congratulations", async (ctx, next) => {
    try {
      const userId = ctx.from?.id;
      if (!userId) return next();

      const user = userStorage.getUser(userId);
      const currentState = user?.enableCongratulations === true;
      const newState = !currentState;
      
      userStorage.setCongratulations(userId, newState);
      
      await ctx.editMessageText(
        `‚úÖ –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è ${newState ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}\\!\n\n` +
        `${newState ? 
          '–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –µ—Å–ª–∏ —É–∂–µ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ —Å—á–µ—Ç —Å–µ–≥–æ–¥–Ω—è\\.' : 
          '–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã\\. –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏\\.'
        }`,
        { 
          parse_mode: 'MarkdownV2',
          ...Markup.inlineKeyboard([
            [Markup.button.callback("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "settings_back")],
            [Markup.button.callback("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main")]
          ])
        }
      );
      
      await ctx.answerCbQuery(`–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è ${newState ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}!`);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ toggle_congratulations:', error);
      await ctx.answerCbQuery("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", { show_alert: true });
    }
    
    return next();
  });

  // –î–µ–π—Å—Ç–≤–∏–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
  common.action("settings_back", async (ctx, next) => {
    try {
      const userId = ctx.from?.id;
      if (!userId) return next();

      const user = userStorage.getUser(userId);
      const hasNotifications = user?.notificationTime !== undefined;
      const hasCongratulations = user?.enableCongratulations === true;
      
      await ctx.editMessageText(
        "‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π*\n\n" +
        `üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: ${hasNotifications ? `–≤–∫–ª—é—á–µ–Ω—ã –≤ ${user?.notificationTime}:00` : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}\n` +
        `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è: ${hasCongratulations ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–æ—Ç–∫–ª—é—á–µ–Ω—ã'}\n\n` +
        "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:",
        {
          parse_mode: 'MarkdownV2',
          ...Markup.inlineKeyboard([
            [Markup.button.callback("üîî –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π", "set_time")],
            [Markup.button.callback(hasCongratulations ? "üéâ –û—Ç–∫–ª—é—á–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è" : "üéâ –í–∫–ª—é—á–∏—Ç—å –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è", "toggle_congratulations")],
            [Markup.button.callback("üîô –ù–∞–∑–∞–¥", "back_to_main")]
          ])
        }
      );
      
      await ctx.answerCbQuery();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ settings_back:', error);
      await ctx.answerCbQuery("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞", { show_alert: true });
    }
    
    return next();
  });

  // –î–µ–π—Å—Ç–≤–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
  common.action("set_time", async (ctx, next) => {
    const timeButtons = [9, 12, 15, 18, 21].map((time) =>
      Markup.button.callback(`${time}:00`, `time_${time}`)
    );
    const markupTime = Markup.inlineKeyboard([
      timeButtons.slice(0, 3),
      timeButtons.slice(3),
      [Markup.button.callback("üîô –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", "settings_back")]
    ]);

    await ctx.editMessageText(
      "üïê –í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:",
      markupTime
    );
    
    await ctx.answerCbQuery();
    return next();
  });

  common.help((ctx) => ctx.reply(commands.text));

  bot.use(common);
}