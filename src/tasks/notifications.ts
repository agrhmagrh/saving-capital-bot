import bot from "../bot";
import { userStorage } from "../services";
import * as fs from 'fs';
import * as path from 'path';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
export async function sendDailyReminders(hour: number) {
  const timestamp = new Date().toLocaleString('ru-RU');
  console.log(`\nüîî [${timestamp}] –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ ${hour}:00`);
  
  const allUsers = userStorage.getUsersForNotification(hour);
  
  // –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ç–µ–º, –∫—Ç–æ –µ—â–µ –Ω–µ –ø–æ–ø–æ–ª–Ω—è–ª —Å–µ–≥–æ–¥–Ω—è
  const usersNeedingReminder = allUsers.filter(user => !userStorage.hasTopUpToday(user.userId));
  
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`  - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏: ${allUsers.length}`);
  console.log(`  - –£–∂–µ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ —Å–µ–≥–æ–¥–Ω—è: ${allUsers.length - usersNeedingReminder.length}`);
  console.log(`  - –ù—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: ${usersNeedingReminder.length}`);
  
  if (usersNeedingReminder.length === 0) {
    console.log(`‚ú® –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ —Å—á–µ—Ç —Å–µ–≥–æ–¥–Ω—è! –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ –Ω—É–∂–Ω—ã.`);
    return;
  }
  
  let successCount = 0;
  let errorCount = 0;
  
  for (const user of usersNeedingReminder) {
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ —Ç–µ–º, –∫—Ç–æ –µ—â–µ –Ω–µ –ø–æ–ø–æ–ª–Ω—è–ª
      const stats = userStorage.getUserStats(user.userId);
      const remainingNumbers = stats?.remainingNumbers.slice(0, 5) || [];
      
      await bot.telegram.sendMessage(
        user.userId,
        `üîî *–í—Ä–µ–º—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á–µ—Ç\\!*\n\n` +
        `üí° –í—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 365 –∏ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±—Ä–æ–∫–µ—Ä—Å–∫–∏–π —Å—á–µ—Ç\\.\n\n` +
        `üìä –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å: *${user.usedNumbers.size}*/365\n` +
        `üí∞ –ù–∞–∫–æ–ø–ª–µ–Ω–æ: *${user.totalAmount}* —Ä—É–±–ª–µ–π\n\n` +
        `üéØ –ü—Ä–µ–¥–ª–∞–≥–∞—é —á–∏—Å–ª–∞: ${remainingNumbers.join(', ')}${remainingNumbers.length === 5 ? '\\.\\.\\.' : ''}`,
        { parse_mode: 'MarkdownV2' }
      );
      
      successCount++;
      console.log(`  ‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.userId}`);
    } catch (error) {
      errorCount++;
      console.error(`  ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.userId}:`, error);
    }
  }
  
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –ø–æ–ø–æ–ª–Ω–∏–ª–∏, –ª–æ–≥–∏—Ä—É–µ–º —ç—Ç–æ
  const usersAlreadyTopUp = allUsers.filter(user => userStorage.hasTopUpToday(user.userId));
  if (usersAlreadyTopUp.length > 0) {
    console.log(`  ‚ÑπÔ∏è –ü—Ä–æ–ø—É—â–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (—É–∂–µ –ø–æ–ø–æ–ª–Ω–∏–ª–∏): ${usersAlreadyTopUp.map(u => u.userId).join(', ')}`);
  }
  
  console.log(`üìà –ò—Ç–æ–≥–æ: ${successCount} —É—Å–ø–µ—à–Ω–æ, ${errorCount} –æ—à–∏–±–æ–∫`);
  console.log(`üîî [${new Date().toLocaleString('ru-RU')}] –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n`);
}

// –§–∞–π–ª—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
const NOTIFICATION_LOG_FILE = path.join(process.cwd(), 'data', 'last_notifications.json');
const SCHEDULER_LOCK_FILE = path.join(process.cwd(), 'data', 'scheduler.lock');

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
let schedulerInterval: NodeJS.Timeout | null = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –ª–∏ —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —ç—Ç–æ—Ç —á–∞—Å —Å–µ–≥–æ–¥–Ω—è
function hasNotificationSentToday(hour: number): boolean {
  try {
    if (!fs.existsSync(NOTIFICATION_LOG_FILE)) {
      return false;
    }
    
    const data = JSON.parse(fs.readFileSync(NOTIFICATION_LOG_FILE, 'utf8'));
    const today = new Date().toDateString();
    const key = `${today}_${hour}`;
    
    return data[key] === true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
function createSchedulerLock(): boolean {
  try {
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    const dataDir = path.dirname(SCHEDULER_LOCK_FILE);
    if (!fs.existsSync(dataDir)) {
      fs.mkdirSync(dataDir, { recursive: true });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞
    if (fs.existsSync(SCHEDULER_LOCK_FILE)) {
      const lockData = JSON.parse(fs.readFileSync(SCHEDULER_LOCK_FILE, 'utf8'));
      const lockTime = new Date(lockData.timestamp);
      const now = new Date();
      
      // –ï—Å–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Å—Ç–∞—Ä—à–µ 10 –º–∏–Ω—É—Ç, —Å—á–∏—Ç–∞–µ–º –µ—ë —É—Å—Ç–∞—Ä–µ–≤—à–µ–π
      const lockAge = now.getTime() - lockTime.getTime();
      if (lockAge > 10 * 60 * 1000) { // 10 –º–∏–Ω—É—Ç
        console.log('üîì –ù–∞–π–¥–µ–Ω–∞ —É—Å—Ç–∞—Ä–µ–≤—à–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞, —É–¥–∞–ª—è–µ–º...');
        fs.unlinkSync(SCHEDULER_LOCK_FILE);
      } else {
        console.log(`‚ùå –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–∂–µ –∑–∞–ø—É—â–µ–Ω (PID: ${lockData.pid}, –≤—Ä–µ–º—è: ${lockTime.toLocaleString('ru-RU')})`);
        return false;
      }
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
    const lockData = {
      pid: process.pid,
      timestamp: new Date().toISOString(),
      startTime: new Date().toLocaleString('ru-RU')
    };

    fs.writeFileSync(SCHEDULER_LOCK_FILE, JSON.stringify(lockData, null, 2));
    console.log(`üîí –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ (PID: ${process.pid})`);
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', error);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
function removeSchedulerLock(): void {
  try {
    if (fs.existsSync(SCHEDULER_LOCK_FILE)) {
      fs.unlinkSync(SCHEDULER_LOCK_FILE);
      console.log('üîì –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∞');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (heartbeat)
function updateSchedulerLock(): void {
  try {
    if (fs.existsSync(SCHEDULER_LOCK_FILE)) {
      const lockData = JSON.parse(fs.readFileSync(SCHEDULER_LOCK_FILE, 'utf8'));
      lockData.timestamp = new Date().toISOString();
      lockData.lastHeartbeat = new Date().toLocaleString('ru-RU');
      fs.writeFileSync(SCHEDULER_LOCK_FILE, JSON.stringify(lockData, null, 2));
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
function markNotificationSent(hour: number): void {
  try {
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    const dataDir = path.dirname(NOTIFICATION_LOG_FILE);
    if (!fs.existsSync(dataDir)) {
      fs.mkdirSync(dataDir, { recursive: true });
    }
    
    let data: { [key: string]: boolean } = {};
    if (fs.existsSync(NOTIFICATION_LOG_FILE)) {
      data = JSON.parse(fs.readFileSync(NOTIFICATION_LOG_FILE, 'utf8'));
    }
    
    const today = new Date().toDateString();
    const key = `${today}_${hour}`;
    data[key] = true;
    
    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
    const weekAgo = new Date();
    weekAgo.setDate(weekAgo.getDate() - 7);
    
    Object.keys(data).forEach(k => {
      const [dateStr] = k.split('_');
      if (new Date(dateStr) < weekAgo) {
        delete data[k];
      }
    });
    
    fs.writeFileSync(NOTIFICATION_LOG_FILE, JSON.stringify(data, null, 2));
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
export function stopNotificationScheduler(): void {
  if (schedulerInterval) {
    clearInterval(schedulerInterval);
    schedulerInterval = null;
    console.log('‚èπÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }
  removeSchedulerLock();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
export function startNotificationScheduler(): boolean {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
  if (schedulerInterval) {
    console.log('‚ö†Ô∏è –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–∂–µ –∑–∞–ø—É—â–µ–Ω –≤ —ç—Ç–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ');
    return false;
  }

  // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É
  if (!createSchedulerLock()) {
    console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ - —É–∂–µ –∑–∞–ø—É—â–µ–Ω –≤ –¥—Ä—É–≥–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ');
    return false;
  }

  const hours = [9, 12, 15, 18, 21];
  
  console.log('‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω');
  console.log(`üìÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã –¥–ª—è —á–∞—Å–æ–≤: ${hours.join(', ')}`);
  console.log(`üîí PID –ø—Ä–æ—Ü–µ—Å—Å–∞: ${process.pid}`);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã (—á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏–∑-–∑–∞ –∑–∞–¥–µ—Ä–∂–µ–∫)
  schedulerInterval = setInterval(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫—É (heartbeat)
    updateSchedulerLock();
    
    const now = new Date();
    const currentHour = now.getHours();
    const currentMinute = now.getMinutes();
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –ø–µ—Ä–≤—ã–µ 5 –º–∏–Ω—É—Ç –∫–∞–∂–¥–æ–≥–æ —á–∞—Å–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
    // –ò —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ—â–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ —Å–µ–≥–æ–¥–Ω—è –≤ —ç—Ç–æ—Ç —á–∞—Å
    if (currentMinute <= 5 && hours.includes(currentHour)) {
      if (!hasNotificationSentToday(currentHour)) {
        console.log(`‚è∞ –í—Ä–µ–º—è ${currentHour}:${currentMinute.toString().padStart(2, '0')} - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è`);
        markNotificationSent(currentHour);
        sendDailyReminders(currentHour);
      } else {
        // –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ —á–∞—Å, —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å
        if (currentMinute <= 2) {
          console.log(`‚ÑπÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ ${currentHour}:00 —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Å–µ–≥–æ–¥–Ω—è`);
        }
      }
    }
  }, 120000); // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  process.on('SIGINT', () => {
    console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...');
    stopNotificationScheduler();
    process.exit(0);
  });

  process.on('SIGTERM', () => {
    console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫...');
    stopNotificationScheduler();
    process.exit(0);
  });

  process.on('exit', () => {
    removeSchedulerLock();
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π
  process.on('uncaughtException', (error) => {
    console.error('üí• –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ:', error);
    stopNotificationScheduler();
    process.exit(1);
  });

  return true;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π —Ç–µ–º, –∫—Ç–æ —É–∂–µ –ø–æ–ø–æ–ª–Ω–∏–ª (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
export async function sendCongratulations(hour: number) {
  const usersForCongratulations = userStorage.getUsersForCongratulations(hour);
  
  console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–π –≤ ${hour}:00 –¥–ª—è ${usersForCongratulations.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
  
  for (const user of usersForCongratulations) {
    try {
      await bot.telegram.sendMessage(
        user.userId,
        `üéâ *–û—Ç–ª–∏—á–Ω–æ\\!* –°–µ–≥–æ–¥–Ω—è –≤—ã —É–∂–µ –ø–æ–ø–æ–ª–Ω–∏–ª–∏ —Å—á–µ—Ç\\!\n\n` +
        `üí∞ –û–±—â–∞—è —Å—É–º–º–∞: *${user.totalAmount}* —Ä—É–±–ª–µ–π\n` +
        `üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —á–∏—Å–µ–ª: *${user.usedNumbers.size}*/365\n\n` +
        `–£–≤–∏–¥–∏–º—Å—è –∑–∞–≤—Ç—Ä–∞\\! üòä`,
        { parse_mode: 'MarkdownV2' }
      );
      
      console.log(`  üéâ –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.userId}`);
    } catch (error) {
      console.error(`  ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user.userId}:`, error);
    }
  }
}